{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samar\\\\Desktop\\\\project\\\\real-time-tracker\\\\client\\\\src\\\\components\\\\MapView.js\",\n  _s = $RefreshSig$();\n// client/src/components/MapView.js\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapView = () => {\n  _s();\n  const [markers, setMarkers] = useState([]);\n  const [riderLocation, setRiderLocation] = useState(null);\n  useEffect(() => {\n    // Fetch markers from the server for the user\n    // Fetch rider location from the server and update every 5 seconds\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [51.505, -0.09],\n    zoom: 13,\n    style: {\n      height: '400px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), markers.map((marker, idx) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [marker.lat, marker.lng],\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [\"Marker at [\", marker.lat, \", \", marker.lng, \"]\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)), riderLocation && /*#__PURE__*/_jsxDEV(Marker, {\n      position: riderLocation,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [\"Rider at [\", riderLocation[0], \", \", riderLocation[1], \"]\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(MapView, \"dEw9teZDh7RinPed4E8OnzZ9K6Q=\");\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","jsxDEV","_jsxDEV","MapView","_s","markers","setMarkers","riderLocation","setRiderLocation","center","zoom","style","height","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","map","marker","idx","position","lat","lng","_c","$RefreshReg$"],"sources":["C:/Users/Samar/Desktop/project/real-time-tracker/client/src/components/MapView.js"],"sourcesContent":["// client/src/components/MapView.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nconst MapView = () => {\r\n  const [markers, setMarkers] = useState([]);\r\n  const [riderLocation, setRiderLocation] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch markers from the server for the user\r\n    // Fetch rider location from the server and update every 5 seconds\r\n  }, []);\r\n\r\n  return (\r\n    <MapContainer center={[51.505, -0.09]} zoom={13} style={{ height: '400px' }}>\r\n      <TileLayer\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n      />\r\n      {markers.map((marker, idx) => (\r\n        <Marker key={idx} position={[marker.lat, marker.lng]}>\r\n          <Popup>\r\n            Marker at [{marker.lat}, {marker.lng}]\r\n          </Popup>\r\n        </Marker>\r\n      ))}\r\n      {riderLocation && (\r\n        <Marker position={riderLocation}>\r\n          <Popup>\r\n            Rider at [{riderLocation[0]}, {riderLocation[1]}]\r\n          </Popup>\r\n        </Marker>\r\n      )}\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default MapView;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AACtE,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd;IACA;EAAA,CACD,EAAE,EAAE,CAAC;EAEN,oBACEM,OAAA,CAACL,YAAY;IAACY,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,CAAE;IAACC,IAAI,EAAE,EAAG;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAC1EX,OAAA,CAACJ,SAAS;MACRgB,GAAG,EAAC,oDAAoD;MACxDC,WAAW,EAAC;IAAyF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtG,CAAC,EACDd,OAAO,CAACe,GAAG,CAAC,CAACC,MAAM,EAAEC,GAAG,kBACvBpB,OAAA,CAACH,MAAM;MAAWwB,QAAQ,EAAE,CAACF,MAAM,CAACG,GAAG,EAAEH,MAAM,CAACI,GAAG,CAAE;MAAAZ,QAAA,eACnDX,OAAA,CAACF,KAAK;QAAAa,QAAA,GAAC,aACM,EAACQ,MAAM,CAACG,GAAG,EAAC,IAAE,EAACH,MAAM,CAACI,GAAG,EAAC,GACvC;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC,GAHGG,GAAG;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIR,CACT,CAAC,EACDZ,aAAa,iBACZL,OAAA,CAACH,MAAM;MAACwB,QAAQ,EAAEhB,aAAc;MAAAM,QAAA,eAC9BX,OAAA,CAACF,KAAK;QAAAa,QAAA,GAAC,YACK,EAACN,aAAa,CAAC,CAAC,CAAC,EAAC,IAAE,EAACA,aAAa,CAAC,CAAC,CAAC,EAAC,GAClD;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEnB,CAAC;AAACf,EAAA,CA/BID,OAAO;AAAAuB,EAAA,GAAPvB,OAAO;AAiCb,eAAeA,OAAO;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}